include "Primarystar_Floor_Parameters.pfx" 
create Primarystar_Floor_Parameters(0)

include "Primarystar_Time_Stamps.pfx"
create Primarystar_Time_Stamps(0)

#-----------------------------Cube Floor----------------------------------#
Model cubetile
	color ($floorbright,$floorbright,$floorbright) #(0.7,0.93,0.85)
	name 0x7F000000 #cube
	size 0.4
end

effect cubetile -rigid
	Model cubetile
end

define tileline(i,N)
	effect cubetile -offset ($tilegap*(0.5+&{i}),$tilegap*(0.5+(&{N}-&{i}-1)),-0.5*$tilegap)
enddef
	#movingsection
define tilelinemove(i,N)
effect tileline&{i} -hardStop
	arrayCreate tileline (&{i}+$bias)
end

metaparticles tilelinemove&{i}
	#color (1-pow(sin(($tilepe-0+&{i}%8)*2*pi/$tilepe),$sharpness),1,1) (1-pow(sin(($tilepe-1+&{i}%8)*2*pi/$tilepe),$sharpness),1,1) (1-pow(sin(($tilepe-2+&{i}%8)*2*pi/$tilepe),$sharpness),1,1) (1-pow(sin(($tilepe-3+&{i}%8)*2*pi/$tilepe),$sharpness),1,1) (1-pow(sin(($tilepe-4+&{i}%8)*2*pi/$tilepe),$sharpness),1,1) (1-pow(sin(($tilepe-5+&{i}%8)*2*pi/$tilepe),$sharpness),1,1) (1-pow(sin(($tilepe-6+&{i}%8)*2*pi/$tilepe),$sharpness),1,1) (1-pow(sin(($tilepe-7+&{i}%8)*2*pi/$tilepe),$sharpness),1,1) (1-pow(sin(($tilepe-0+&{i}%8)*2*pi/$tilepe),$sharpness),1,1)) 
	yaw 0
	pitch 0
	roll 0
	source -point
	effect tileline&{i}
	maintain 1
	life $cubeperiod
	force -path
	path -p (0,0,$motrange*pow(sin(($tilepe-0+&{i}%8)*2*pi/$tilepe),$sharpness)) -t $cubeperiod*0/$tilepe
	path -p (0,0,$motrange*pow(sin(($tilepe-1+&{i}%8)*2*pi/$tilepe),$sharpness)) -t $cubeperiod*1/$tilepe
	path -p (0,0,$motrange*pow(sin(($tilepe-2+&{i}%8)*2*pi/$tilepe),$sharpness)) -t $cubeperiod*2/$tilepe
	path -p (0,0,$motrange*pow(sin(($tilepe-3+&{i}%8)*2*pi/$tilepe),$sharpness)) -t $cubeperiod*3/$tilepe
	path -p (0,0,$motrange*pow(sin(($tilepe-4+&{i}%8)*2*pi/$tilepe),$sharpness)) -t $cubeperiod*4/$tilepe
	path -p (0,0,$motrange*pow(sin(($tilepe-5+&{i}%8)*2*pi/$tilepe),$sharpness)) -t $cubeperiod*5/$tilepe
	path -p (0,0,$motrange*pow(sin(($tilepe-6+&{i}%8)*2*pi/$tilepe),$sharpness)) -t $cubeperiod*6/$tilepe
	path -p (0,0,$motrange*pow(sin(($tilepe-7+&{i}%8)*2*pi/$tilepe),$sharpness)) -t $cubeperiod*7/$tilepe
	path -p (0,0,$motrange*pow(sin(($tilepe-8+&{i}%8)*2*pi/$tilepe),$sharpness)) -t $cubeperiod*8/$tilepe
end	

effect tilelinemove&{i} -rigid 
	metaparticles tilelinemove&{i}
end
enddef

define tilelinemovelisting(i,N)
	effect tilelinemove&{i}
enddef

define tileareabias(size)
arrayCreate tilelinemove &{size}

effect tileareamovingbias1/4
	arrayCreate tilelinemovelisting &{size}
end
enddef

create tileareabias($thickness)

effect tieleringmoving
	effect tileareamovingbias1/4
	effect tileareamovingbias1/4 -rotateZ 90
	effect tileareamovingbias1/4 -rotateZ -90
	effect tileareamovingbias1/4 -rotateZ 180
end
	#static section
define tilelinestatic(i,N)
	arrayCreate tileline (&{i})
enddef

define tileareabiasstatic(size,name)
effect &{name} -rigid
	arrayCreate tilelinestatic &{size}
end
enddef

create tileareabiasstatic($bias tileareastaticbias1/4)

effect tilesquarestatic
	effect tileareastaticbias1/4
	effect tileareastaticbias1/4 -rotateZ 90
	effect tileareastaticbias1/4 -rotateZ -90
	effect tileareastaticbias1/4 -rotateZ 180
end

create tileareabiasstatic(($bias+$thickness) tileareastatic1/4)

	#combined tiles
effect totaltilefloormoving -rigid
	effect tieleringmoving
	effect tilesquarestatic
end


effect totaltilefloorstatic -rigid
	effect tileareastatic1/4
	effect tileareastatic1/4 -rotateZ 90
	effect tileareastatic1/4 -rotateZ -90
	effect tileareastatic1/4 -rotateZ 180
end

effect animatedcubefloor
	effect totaltilefloormoving
end

effect staticcubefloor -rigid
	effect totaltilefloorstatic
end

metaparticles staticcubefloorrecolored
	color (0,0.1,0.1)
	yaw 0
	pitch 0
	roll 0
	effect staticcubefloor
	life 2
	inject 1 -hold 1
	source -point
end

effect staticcubefloorrecolored -rigid
	metaparticles staticcubefloorrecolored
end

#---------------------------Particle Tile Floor-------------------------------#
#color pulse floor
particles tileparticlees
	color (1,1,1) (1,1,1) (0,1,0.75) (1,1,1) (1,1,1)
	size 1 1 1 1 1 1 0.7 0.4 0.7 1 1 1 1 1 1 
	alpha 1
	align source
	source -point
	life ($cubeperiod/2+0.4) #+0.4 to prevent gaps in the wave propagation
	inject 1 -hold ($cubeperiod/2+0.4) #maintain 1
	texture rectongle -draw additive
end

effect tileparticlees -rigid #-noAutoStop
	particles tileparticlees -sizeScale 0.8
end

define tilelineparticles(i,N)
	effect tileparticlees -offset ($tilegap*(0.5+&{i}),$tilegap*(0.5+(&{N}-&{i}-1)),0.01)#0.51*$tilegap)
enddef

define tilelinemovecolor(i,N)
effect tilelinecolor&{i} -rigid #-hardStop 
	arrayCreate tilelineparticles (&{i}+$bias)
end

sequence tilelinemovetimedparticles&{i} #-Overlap#noStop
	wait (($cubeperiod/2)*(&{i}%$tilepe)/$tilepe+0.1) #0.1 base buffer as 
	play tilelinecolor&{i} ($cubeperiod/2+0.4)
end

effect tilelinemovetimedparticles&{i} 
	sequence tilelinemovetimedparticles&{i}
end

metaparticles tilelinemovetimedcolor&{i}
	yaw 0
	pitch 0
	roll 0
	source -point
	effect tilelinemovetimedparticles&{i}
	maintain 1 #-delay (($cubeperiod*(&{i}%$tilepe)/$tilepe)+0.01)
	life ($cubeperiod/2+0.3) 
end

effect tilelinemovetimedcolor&{i} -rigid -hardStop
	metaparticles tilelinemovetimedcolor&{i} -hardStop
end
enddef
	#array of effect called
define tilelinemovelistingcolor(i,N)
	effect tilelinemovetimedcolor&{i}
enddef
	#calling both, with size parameters
define tileareabiascolor(size)
arrayCreate tilelinemovecolor &{size}

effect tileareamovingbias1/4color
	arrayCreate tilelinemovelistingcolor &{size}
end
enddef

create tileareabiascolor($thickness)

effect tieleringmovingcolor 
	effect tileareamovingbias1/4color
	effect tileareamovingbias1/4color -rotateZ 90
	effect tileareamovingbias1/4color -rotateZ -90
	effect tileareamovingbias1/4color -rotateZ 180
end
	#static particle tile
particles tileparticleesstatic
	color (1,1,1) 
	size 1 
	alpha 1
	align source
	source -point
	life ($cubeperiod/2+0.4)
	inject 1 -hold ($cubeperiod/2) #maintain 1
	texture rectongle -draw additive
end

effect tileparticleesstatic -rigid -hardStop#-noAutoStop
	particles tileparticleesstatic -sizeScale 0.8
end

define tilelinestaticpartilelisting(i,N)
	effect tileparticleesstatic -offset ($tilegap*(0.5+&{i}),$tilegap*(0.5+(&{N}-&{i}-1)),0.01)#0.51*$tilegap)
enddef

define tilelinestaticpartile(i,N)
	arrayCreate tilelinestaticpartilelisting (&{i})
enddef

define tileareabiasstaticpartile(size,name)
effect &{name} -rigid
	arrayCreate tilelinestaticpartile &{size}
end
enddef

create tileareabiasstaticpartile($bias tileareastaticbias1/4partile)

effect tilesquarestaticpartile
	effect tileareastaticbias1/4partile
	effect tileareastaticbias1/4partile -rotateZ 90
	effect tileareastaticbias1/4partile -rotateZ -90
	effect tileareastaticbias1/4partile -rotateZ 180
end

effect totalparticlefloor -hardStop -rigid
	effect tieleringmovingcolor
	effect tilesquarestaticpartile
end
#<
sequence tilephasechange -loop -noOverlap
	play totaltilefloormoving 10
	play totalparticlefloor 10
end

effect tilephasechange
	sequence tilephasechange 
end#>

effect animatedparticlefloor
	effect totalparticlefloor 
end

#------------------------Total Timed Floors-----------------------------#
sequence timedfloorsequence -noOverlap
	#wait $t0
	play staticcubefloorrecolored $t1-$t0
	play animatedcubefloor $t2-$t1
	play animatedparticlefloor $t3-$t2
	play animatedcubefloor $t4-$t3
	play animatedparticlefloor $t5-$t4
	play animatedcubefloor $t6-$t5
	play animatedparticlefloor $t7-$t6
	play animatedcubefloor $t7a-$t7
	play staticcubefloorrecolored
end

effect timedfloorsequence 
	sequence timedfloorsequence
end

effect Primarystar_Floor -hardStop -rigid
	effect timedfloorsequence	
	#effect staticcubefloorrecolored
end

export Primarystar_Floor