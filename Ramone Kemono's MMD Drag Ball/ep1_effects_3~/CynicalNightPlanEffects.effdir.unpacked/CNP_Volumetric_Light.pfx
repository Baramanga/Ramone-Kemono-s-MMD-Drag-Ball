setf diam 2
setf luminence 0.6#0.2
particles RingGlow
    color ($luminence,$luminence,$luminence) 
    alpha 0.01
    size 1.3*$diam
    rotate 1
    source -point
    life 5
    inject 1 -hold 4.9
	align source
    texture 0x0A0D1DD3 -draw additive#material 0x3F42AB15
end

particles CoreGlow
    color ($luminence,$luminence,$luminence)
    alpha 0.01
    size 0.6*$diam
    rotate 1
    source -point
    life 5
    inject 1 -hold 4.9
	align source
    texture 0x058DEF89 -draw additive#material 0x3F42AB15
end

effect GroupedGlow -rigid -cameraFacing #-hardStop
	particles RingGlow -offset (0.3*$diam, 0, 0) -rotateY 90 -rigid
	particles CoreGlow -offset (0.3*$diam/2, 0, 0) -rotateY 90 -rigid
	particles RingGlow -offset (-0.3*$diam, 0, 0) -rotateY 90 -rigid
	particles CoreGlow -offset (-(0.3*$diam/2), 0, 0) -rotateY 90 -rigid
end
setf beamwidth 13
setf beamheight 20
setf beameven 2.8
setf beamangle 5
define IndividualGlow(Zsize) 
    effect GroupedGlow -offset (0, 0, -3*($beamheight*$beamangle/(&Zsize/$beameven+$beamangle)))  -sizeScale ($beamwidth*$beamangle/(&Zsize/$beameven+$beamangle)) 
enddef

define createbundle(offset)
	create IndividualGlow(0+&offset*20)
	create IndividualGlow(0.5+&offset*20)
	create IndividualGlow(1+&offset*20)
	create IndividualGlow(1.5+&offset*20)
	create IndividualGlow(2+&offset*20)
	create IndividualGlow(2.5+&offset*20)
	create IndividualGlow(3+&offset*20)
	create IndividualGlow(3.5+&offset*20)
	create IndividualGlow(4+&offset*20)
	create IndividualGlow(4.5+&offset*20)
	create IndividualGlow(5+&offset*20)
	create IndividualGlow(5.5+&offset*20)
	create IndividualGlow(6+&offset*20)
	create IndividualGlow(6.5+&offset*20)
	create IndividualGlow(7+&offset*20)
	create IndividualGlow(7.5+&offset*20)
	create IndividualGlow(8+&offset*20)
	create IndividualGlow(8.5+&offset*20)
	create IndividualGlow(9+&offset*20)
	create IndividualGlow(9.5+&offset*20)
	create IndividualGlow(10+&offset*20)
	create IndividualGlow(10.5+&offset*20)
	create IndividualGlow(11+&offset*20)
	create IndividualGlow(12+&offset*20)
	create IndividualGlow(13+&offset*20)
	create IndividualGlow(14+&offset*20)
	create IndividualGlow(15+&offset*20)
	create IndividualGlow(16+&offset*20)
	create IndividualGlow(17+&offset*20)
	create IndividualGlow(18+&offset*20)
	create IndividualGlow(20+&offset*20)
enddef

effect VolumetricLight #-rigid
	create createbundle(1)
	create createbundle(2)
end

setf tilt 51

effect LightGroupoffset 
	effect VolumetricLight  -offset (0,0,$beamheight*1.2) #VolumetricLight
end

effect LightGrouptilted #-rigid
	#sound -name CNP_spotlight -volume 1 -stop -loop
	effect LightGroupoffset -rotateXYZ 0 $tilt 0
	#effect LightGroupoffset -rotateXYZ $tilt 0 0
	#effect LightGroupoffset -rotateXYZ 0 -$tilt 0
	#effect LightGroupoffset -rotateXYZ -$tilt 0 0
end 

sequence lighttiltdelay
	wait 1 2
	play LightGrouptilted
end

effect lighttiltdelay
	sequence lighttiltdelay
end

define recoloredlightsetting(i)
	pitch 0# -vary 0.2
	roll 0
	source -point
	life 100 
	inject 1 -hold 11 
	effect lighttiltdelay#lighttiltdelay
enddef

setf offsetsideway 8/360
setf variation 8/360
metaParticles recoloredlight
	yaw 1 -vary $variation -offset (0+$offsetsideway)
	color (0.8,0.4,1) 
	create recoloredlightsetting(0)
end

metaParticles recoloredlight1
	yaw 1 -vary $variation -offset 0.25
	color (0.7,1,0.6) 
	create recoloredlightsetting(0)
end

metaParticles recoloredlight2
	yaw 1 -vary $variation -offset 0.5
	color  (0.8,0.2,1)
	create recoloredlightsetting(0)
end

metaParticles recoloredlight3
	yaw 1 -vary $variation -offset (0.75-$offsetsideway)
	color (0.2,0.51,1)
	create recoloredlightsetting(0)
end

effect recoloredlightgroup
	metaParticles recoloredlight
	#metaParticles recoloredlight1
	#metaParticles recoloredlight2
	metaParticles recoloredlight3
end

effect CNP_Volumetric_Light
	effect recoloredlightgroup
end

export CNP_Volumetric_Light